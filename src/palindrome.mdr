Début de la définition de la fonction nommée EnleverNonAlphaNumérique acceptant le paramètre Mot.
    Posons que TailleMot vaut Taille de Mot.
    Posons que I vaut 0.
    Posons que MotFinal vaut Mot.
    Exécuter 4 énoncés tant que I vaut moins que TailleMot.
        Posons que Car vaut le caractère de Mot à l'index I.
        Exécuter 1 énoncé si le résultat de l'appel à EstAlphaNumérique de Car ne vaut pas Vrai.
            Maintenant, MotFinal vaut le résultat de l'appel à Remplacer de MotFinal avec les arguments Car et «  ».
        Maintenant, I vaut I plus 1.

    Retourner le résultat de l'appel à Minuscule de MotFinal.
Fin de la définition de la fonction.


Début de la définition de la fonction nommée EstUnPalindrome acceptant le paramètre Mot.
    Posons que BonMot vaut le résultat de l'appel à EnleverNonAlphaNumérique avec l'argument Mot.
    Posons que I vaut 0.
    Posons que TailleMot vaut Taille de BonMot.
    Posons que EstPalindrome vaut Vrai.
    Exécuter 4 énoncés tant que I vaut moins que TailleMot.
        Exécuter 2 énoncés si le caractère de BonMot à l'index I ne vaut pas le caractère de BonMot à la position "TailleMot moins I".
            Maintenant, EstPalindrome vaut Faux.
            Maintenant, I vaut TailleMot.
        Maintenant, I vaut I plus 1.
    Retourner la valeur EstPalindrome.
Fin de la définition de la fonction.

Posons que Mot vaut « A man, a plan, a canal: Panama ».
Posons que Mot2 vaut « kayak ».
Posons que EstPalindrome vaut le résultat de l'appel à EstUnPalindrome avec l'argument Mot2.
Imprimer « Le mot  » concaténé à Mot2 concaténé à «  est un palindrome?  » concaténé à EstPalindrome.
